name: Build Vanilla+ Radio

on:
  push:
    branches: [ main, master ]

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Extract mod version
        id: version
        run: |
          MOD_VERSION=$(grep '^mod_version=' gradle.properties | cut -d= -f2 | tr -d "'\" ")
          echo "MOD_VERSION=${MOD_VERSION}" >> $GITHUB_OUTPUT

      - name: Find existing tags and calculate release number
        id: tags
        run: |
          git fetch --tags
          BASE_TAG="v${{ steps.version.outputs.MOD_VERSION }}"
          COUNT=1
          while git rev-parse "$BASE_TAG#$COUNT" >/dev/null 2>&1; do
            ((COUNT++))
          done
          echo "RELEASE_TAG=${BASE_TAG}#${COUNT}" >> $GITHUB_OUTPUT
          echo "RELEASE_NUMBER=${COUNT}" >> $GITHUB_OUTPUT
          echo "Using tag: ${BASE_TAG}#${COUNT}"

      - name: Create Git tag
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "$RELEASE_TAG" -m "Release $RELEASE_TAG"
          git push origin "$RELEASE_TAG"
        env:
          RELEASE_TAG: ${{ steps.tags.outputs.RELEASE_TAG }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build mod
        run: ./gradlew build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "${{ steps.tags.outputs.RELEASE_TAG }}"
          name: "Vanilla+ Radio ${{ steps.version.outputs.MOD_VERSION }}"
          files: build/libs/*[!-dev].jar
          draft: false
          generate_release_notes: true
